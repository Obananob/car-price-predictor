{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1QYlXQrZ7BQYkaisWB55O4-wfsginKH70","authorship_tag":"ABX9TyPwli3hyscCHvwplq52tSy5"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"qTu9Q_DeopRF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744895345221,"user_tz":-60,"elapsed":19953,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"c7ef29e0-0f3e-4bc4-e0ad-f0b55f15647f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pandas==2.2.2\n","  Downloading pandas-2.2.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (19 kB)\n","Requirement already satisfied: numpy>=1.23.2 in /usr/local/lib/python3.11/dist-packages (from pandas==2.2.2) (1.26.4)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas==2.2.2) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas==2.2.2) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas==2.2.2) (2025.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas==2.2.2) (1.17.0)\n","Downloading pandas-2.2.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.0 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.0/13.0 MB\u001b[0m \u001b[31m97.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: pandas\n","  Attempting uninstall: pandas\n","    Found existing installation: pandas 2.1.4\n","    Uninstalling pandas-2.1.4:\n","      Successfully uninstalled pandas-2.1.4\n","Successfully installed pandas-2.2.2\n","Collecting numpy==2.0.0\n","  Downloading numpy-2.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (60 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m60.9/60.9 kB\u001b[0m \u001b[31m4.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading numpy-2.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (19.3 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m19.3/19.3 MB\u001b[0m \u001b[31m82.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: numpy\n","  Attempting uninstall: numpy\n","    Found existing installation: numpy 1.26.4\n","    Uninstalling numpy-1.26.4:\n","      Successfully uninstalled numpy-1.26.4\n","Successfully installed numpy-2.0.0\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.11/dist-packages (1.6.0)\n","Requirement already satisfied: numpy>=1.19.5 in /usr/local/lib/python3.11/dist-packages (from scikit-learn) (2.0.0)\n","Requirement already satisfied: scipy>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn) (1.14.1)\n","Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn) (1.4.2)\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn) (3.6.0)\n"]}],"source":["!pip install pandas==2.2.2\n","!pip install numpy==2.0.0\n","!pip install scikit-learn"]},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import mean_absolute_error, mean_squared_error"],"metadata":{"id":"2kS1qPWizWIe","executionInfo":{"status":"ok","timestamp":1744896781190,"user_tz":-60,"elapsed":97,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Copy of car_data.csv')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ffNij0Fn5Cjk","executionInfo":{"status":"ok","timestamp":1744896790503,"user_tz":-60,"elapsed":120,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"52fd7d90-cd3e-4ff3-995f-7864304a8b57"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Make  Year of manufacture      Condition   Mileage  Engine Size  \\\n","0         Toyota               2007.0  Nigerian Used  166418.0       2400.0   \n","1          Lexus                  NaN            NaN  138024.0          NaN   \n","2  Mercedes-Benz               2008.0  Nigerian Used  376807.0       3000.0   \n","3          Lexus                  NaN            NaN  213362.0          NaN   \n","4  Mercedes-Benz                  NaN            NaN  106199.0          NaN   \n","\n","     Fuel Transmission    Price  Price Category  \n","0  Petrol    Automatic  3120000               0  \n","1     NaN    Automatic  5834000               1  \n","2  Petrol    Automatic  3640000               0  \n","3     NaN    Automatic  3594000               0  \n","4     NaN    Automatic  8410000               1  "],"text/html":["\n","  <div id=\"df-067753b2-c08d-4d20-a4cc-e2f4866f3c70\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Make</th>\n","      <th>Year of manufacture</th>\n","      <th>Condition</th>\n","      <th>Mileage</th>\n","      <th>Engine Size</th>\n","      <th>Fuel</th>\n","      <th>Transmission</th>\n","      <th>Price</th>\n","      <th>Price Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Toyota</td>\n","      <td>2007.0</td>\n","      <td>Nigerian Used</td>\n","      <td>166418.0</td>\n","      <td>2400.0</td>\n","      <td>Petrol</td>\n","      <td>Automatic</td>\n","      <td>3120000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lexus</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>138024.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Automatic</td>\n","      <td>5834000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mercedes-Benz</td>\n","      <td>2008.0</td>\n","      <td>Nigerian Used</td>\n","      <td>376807.0</td>\n","      <td>3000.0</td>\n","      <td>Petrol</td>\n","      <td>Automatic</td>\n","      <td>3640000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Lexus</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>213362.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Automatic</td>\n","      <td>3594000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Mercedes-Benz</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>106199.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Automatic</td>\n","      <td>8410000</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-067753b2-c08d-4d20-a4cc-e2f4866f3c70')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-067753b2-c08d-4d20-a4cc-e2f4866f3c70 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-067753b2-c08d-4d20-a4cc-e2f4866f3c70');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-31e9f115-54ff-4327-b9b6-63ddb06d4faf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-31e9f115-54ff-4327-b9b6-63ddb06d4faf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-31e9f115-54ff-4327-b9b6-63ddb06d4faf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 4095,\n  \"fields\": [\n    {\n      \"column\": \"Make\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 49,\n        \"samples\": [\n          \"Renault\",\n          \"Volvo\",\n          \"Bentley\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year of manufacture\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.3001261247290765,\n        \"min\": 1992.0,\n        \"max\": 2021.0,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          1992.0,\n          2002.0,\n          2012.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Condition\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Nigerian Used\",\n          \"Foreign Used\",\n          \"Brand New\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mileage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 210923.30123476358,\n        \"min\": 1.0,\n        \"max\": 9976050.0,\n        \"num_unique_values\": 3118,\n        \"samples\": [\n          71610.0,\n          83132.0,\n          13022.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Engine Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7693.489588042275,\n        \"min\": 3.0,\n        \"max\": 371000.0,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          30.0,\n          2400.0,\n          50000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Diesel\",\n          \"Electric\",\n          \"Petrol\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transmission\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Manual\",\n          \"CVT\",\n          \"Automatic\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4900063,\n        \"min\": 458000,\n        \"max\": 58800000,\n        \"num_unique_values\": 579,\n        \"samples\": [\n          24650000,\n          787500,\n          577500\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price Category\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# Handle missing values - fill numeric columns with median\n","df[\"Year of manufacture\"].fillna(df[\"Year of manufacture\"].median(), inplace=True)\n","df[\"Engine Size\"].fillna(df[\"Engine Size\"].median(), inplace=True)\n","df[\"Mileage\"].fillna(df[\"Mileage\"].median(), inplace=True)\n","df[\"Price\"].fillna(df[\"Price\"].median(), inplace=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BnKQexiJ8sh_","executionInfo":{"status":"ok","timestamp":1744896797218,"user_tz":-60,"elapsed":23,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"fb14e015-44f0-414d-c5c9-c9f317587bc8"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-9-c1c7d52ad317>:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df[\"Year of manufacture\"].fillna(df[\"Year of manufacture\"].median(), inplace=True)\n","<ipython-input-9-c1c7d52ad317>:3: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df[\"Engine Size\"].fillna(df[\"Engine Size\"].median(), inplace=True)\n","<ipython-input-9-c1c7d52ad317>:4: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df[\"Mileage\"].fillna(df[\"Mileage\"].median(), inplace=True)\n","<ipython-input-9-c1c7d52ad317>:5: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df[\"Price\"].fillna(df[\"Price\"].median(), inplace=True)\n"]}]},{"cell_type":"code","source":["df.info"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"DcjScxUQ8wrn","executionInfo":{"status":"ok","timestamp":1744896818476,"user_tz":-60,"elapsed":213,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"e9700822-133e-4588-e362-f32a9affc4b5"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method DataFrame.info of                Make  Year of manufacture      Condition   Mileage  \\\n","0            Toyota               2007.0  Nigerian Used  166418.0   \n","1             Lexus               2008.0            NaN  138024.0   \n","2     Mercedes-Benz               2008.0  Nigerian Used  376807.0   \n","3             Lexus               2008.0            NaN  213362.0   \n","4     Mercedes-Benz               2008.0            NaN  106199.0   \n","...             ...                  ...            ...       ...   \n","4090          Honda               2004.0  Nigerian Used  207446.0   \n","4091         Toyota               2005.0  Nigerian Used  106914.0   \n","4092          Honda               2006.0  Nigerian Used  247149.0   \n","4093         Toyota               2007.0  Nigerian Used  249325.0   \n","4094         Toyota               2013.0   Foreign Used  235184.0   \n","\n","      Engine Size    Fuel Transmission    Price  Price Category  \n","0          2400.0  Petrol    Automatic  3120000               0  \n","1          2500.0     NaN    Automatic  5834000               1  \n","2          3000.0  Petrol    Automatic  3640000               0  \n","3          2500.0     NaN    Automatic  3594000               0  \n","4          2500.0     NaN    Automatic  8410000               1  \n","...           ...     ...          ...      ...             ...  \n","4090       3500.0  Petrol    Automatic  1125000               0  \n","4091       1800.0  Petrol    Automatic  2643750               0  \n","4092       1800.0  Petrol    Automatic  1462500               0  \n","4093       2500.0  Petrol    Automatic  2475000               0  \n","4094       2500.0  Petrol    Automatic  6300000               1  \n","\n","[4095 rows x 9 columns]>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.frame.DataFrame.info</b><br/>def info(verbose: bool | None=None, buf: WriteBuffer[str] | None=None, max_cols: int | None=None, memory_usage: bool | str | None=None, show_counts: bool | None=None) -&gt; None</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.11/dist-packages/pandas/core/frame.py</a>Print a concise summary of a DataFrame.\n","\n","This method prints information about a DataFrame including\n","the index dtype and columns, non-null values and memory usage.\n","\n","Parameters\n","----------\n","verbose : bool, optional\n","    Whether to print the full summary. By default, the setting in\n","    ``pandas.options.display.max_info_columns`` is followed.\n","buf : writable buffer, defaults to sys.stdout\n","    Where to send the output. By default, the output is printed to\n","    sys.stdout. Pass a writable buffer if you need to further process\n","    the output.\n","max_cols : int, optional\n","    When to switch from the verbose to the truncated output. If the\n","    DataFrame has more than `max_cols` columns, the truncated output\n","    is used. By default, the setting in\n","    ``pandas.options.display.max_info_columns`` is used.\n","memory_usage : bool, str, optional\n","    Specifies whether total memory usage of the DataFrame\n","    elements (including the index) should be displayed. By default,\n","    this follows the ``pandas.options.display.memory_usage`` setting.\n","\n","    True always show memory usage. False never shows memory usage.\n","    A value of &#x27;deep&#x27; is equivalent to &quot;True with deep introspection&quot;.\n","    Memory usage is shown in human-readable units (base-2\n","    representation). Without deep introspection a memory estimation is\n","    made based in column dtype and number of rows assuming values\n","    consume the same memory amount for corresponding dtypes. With deep\n","    memory introspection, a real memory usage calculation is performed\n","    at the cost of computational resources. See the\n","    :ref:`Frequently Asked Questions &lt;df-memory-usage&gt;` for more\n","    details.\n","show_counts : bool, optional\n","    Whether to show the non-null counts. By default, this is shown\n","    only if the DataFrame is smaller than\n","    ``pandas.options.display.max_info_rows`` and\n","    ``pandas.options.display.max_info_columns``. A value of True always\n","    shows the counts, and False never shows the counts.\n","\n","Returns\n","-------\n","None\n","    This method prints a summary of a DataFrame and returns None.\n","\n","See Also\n","--------\n","DataFrame.describe: Generate descriptive statistics of DataFrame\n","    columns.\n","DataFrame.memory_usage: Memory usage of DataFrame columns.\n","\n","Examples\n","--------\n","&gt;&gt;&gt; int_values = [1, 2, 3, 4, 5]\n","&gt;&gt;&gt; text_values = [&#x27;alpha&#x27;, &#x27;beta&#x27;, &#x27;gamma&#x27;, &#x27;delta&#x27;, &#x27;epsilon&#x27;]\n","&gt;&gt;&gt; float_values = [0.0, 0.25, 0.5, 0.75, 1.0]\n","&gt;&gt;&gt; df = pd.DataFrame({&quot;int_col&quot;: int_values, &quot;text_col&quot;: text_values,\n","...                   &quot;float_col&quot;: float_values})\n","&gt;&gt;&gt; df\n","    int_col text_col  float_col\n","0        1    alpha       0.00\n","1        2     beta       0.25\n","2        3    gamma       0.50\n","3        4    delta       0.75\n","4        5  epsilon       1.00\n","\n","Prints information of all columns:\n","\n","&gt;&gt;&gt; df.info(verbose=True)\n","&lt;class &#x27;pandas.core.frame.DataFrame&#x27;&gt;\n","RangeIndex: 5 entries, 0 to 4\n","Data columns (total 3 columns):\n"," #   Column     Non-Null Count  Dtype\n","---  ------     --------------  -----\n"," 0   int_col    5 non-null      int64\n"," 1   text_col   5 non-null      object\n"," 2   float_col  5 non-null      float64\n","dtypes: float64(1), int64(1), object(1)\n","memory usage: 248.0+ bytes\n","\n","Prints a summary of columns count and its dtypes but not per column\n","information:\n","\n","&gt;&gt;&gt; df.info(verbose=False)\n","&lt;class &#x27;pandas.core.frame.DataFrame&#x27;&gt;\n","RangeIndex: 5 entries, 0 to 4\n","Columns: 3 entries, int_col to float_col\n","dtypes: float64(1), int64(1), object(1)\n","memory usage: 248.0+ bytes\n","\n","Pipe output of DataFrame.info to buffer instead of sys.stdout, get\n","buffer content and writes to a text file:\n","\n","&gt;&gt;&gt; import io\n","&gt;&gt;&gt; buffer = io.StringIO()\n","&gt;&gt;&gt; df.info(buf=buffer)\n","&gt;&gt;&gt; s = buffer.getvalue()\n","&gt;&gt;&gt; with open(&quot;df_info.txt&quot;, &quot;w&quot;,\n","...           encoding=&quot;utf-8&quot;) as f:  # doctest: +SKIP\n","...     f.write(s)\n","260\n","\n","The `memory_usage` parameter allows deep introspection mode, specially\n","useful for big DataFrames and fine-tune memory optimization:\n","\n","&gt;&gt;&gt; random_strings_array = np.random.choice([&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;], 10 ** 6)\n","&gt;&gt;&gt; df = pd.DataFrame({\n","...     &#x27;column_1&#x27;: np.random.choice([&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;], 10 ** 6),\n","...     &#x27;column_2&#x27;: np.random.choice([&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;], 10 ** 6),\n","...     &#x27;column_3&#x27;: np.random.choice([&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;], 10 ** 6)\n","... })\n","&gt;&gt;&gt; df.info()\n","&lt;class &#x27;pandas.core.frame.DataFrame&#x27;&gt;\n","RangeIndex: 1000000 entries, 0 to 999999\n","Data columns (total 3 columns):\n"," #   Column    Non-Null Count    Dtype\n","---  ------    --------------    -----\n"," 0   column_1  1000000 non-null  object\n"," 1   column_2  1000000 non-null  object\n"," 2   column_3  1000000 non-null  object\n","dtypes: object(3)\n","memory usage: 22.9+ MB\n","\n","&gt;&gt;&gt; df.info(memory_usage=&#x27;deep&#x27;)\n","&lt;class &#x27;pandas.core.frame.DataFrame&#x27;&gt;\n","RangeIndex: 1000000 entries, 0 to 999999\n","Data columns (total 3 columns):\n"," #   Column    Non-Null Count    Dtype\n","---  ------    --------------    -----\n"," 0   column_1  1000000 non-null  object\n"," 1   column_2  1000000 non-null  object\n"," 2   column_3  1000000 non-null  object\n","dtypes: object(3)\n","memory usage: 165.9 MB</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 3646);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df[\"Condition\"].fillna(df[\"Condition\"].mode()[0], inplace=True)\n","df[\"Fuel\"].fillna(df[\"Fuel\"].mode()[0], inplace=True)\n","df[\"Transmission\"].fillna(df[\"Transmission\"].mode()[0], inplace=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0b8q5A8S9I6b","executionInfo":{"status":"ok","timestamp":1744896856265,"user_tz":-60,"elapsed":56,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"2dd0701e-c1cb-402e-d0eb-69122efceb4c"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-12-77e2f1583891>:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df[\"Condition\"].fillna(df[\"Condition\"].mode()[0], inplace=True)\n","<ipython-input-12-77e2f1583891>:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df[\"Fuel\"].fillna(df[\"Fuel\"].mode()[0], inplace=True)\n","<ipython-input-12-77e2f1583891>:3: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df[\"Transmission\"].fillna(df[\"Transmission\"].mode()[0], inplace=True)\n"]}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","\n","# Create a LabelEncoder instance\n","le_condition = LabelEncoder()\n","le_fuel = LabelEncoder()\n","le_transmission = LabelEncoder()"],"metadata":{"id":"f0BPpE_U9S24","executionInfo":{"status":"ok","timestamp":1744896876449,"user_tz":-60,"elapsed":41,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# Apply Label Encoding to each categorical column\n","df[\"Condition\"] = le_condition.fit_transform(df[\"Condition\"])\n","df[\"Fuel\"] = le_fuel.fit_transform(df[\"Fuel\"])\n","df[\"Transmission\"] = le_transmission.fit_transform(df[\"Transmission\"])\n","df[\"Make\"] = le_transmission.fit_transform(df[\"Make\"])"],"metadata":{"id":"nHge_igh9a0b","executionInfo":{"status":"ok","timestamp":1744896901301,"user_tz":-60,"elapsed":47,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VK0WkAeT9nh8","executionInfo":{"status":"ok","timestamp":1744897340019,"user_tz":-60,"elapsed":18,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"edba93d9-c82a-4c28-f64a-ce48ae561058"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 4095 entries, 0 to 4094\n","Data columns (total 9 columns):\n"," #   Column               Non-Null Count  Dtype  \n","---  ------               --------------  -----  \n"," 0   Make                 4095 non-null   int64  \n"," 1   Year of manufacture  4095 non-null   float64\n"," 2   Condition            4095 non-null   int64  \n"," 3   Mileage              4095 non-null   float64\n"," 4   Engine Size          4095 non-null   float64\n"," 5   Fuel                 4095 non-null   int64  \n"," 6   Transmission         4095 non-null   int64  \n"," 7   Price                4095 non-null   int64  \n"," 8   Price Category       4095 non-null   int64  \n","dtypes: float64(3), int64(6)\n","memory usage: 288.1 KB\n"]}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"AlzzHUl-_Kpz","executionInfo":{"status":"ok","timestamp":1744898649797,"user_tz":-60,"elapsed":121,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"854b172b-9022-4d77-d671-b5a6dd286b87"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Make  Year of manufacture  Condition   Mileage  Engine Size  Fuel  \\\n","0    46               2007.0          2  166418.0       2400.0     3   \n","1    26               2008.0          2  138024.0       2500.0     3   \n","2    30               2008.0          2  376807.0       3000.0     3   \n","3    26               2008.0          2  213362.0       2500.0     3   \n","4    30               2008.0          2  106199.0       2500.0     3   \n","\n","   Transmission    Price  Price Category  \n","0             1  3120000               0  \n","1             1  5834000               1  \n","2             1  3640000               0  \n","3             1  3594000               0  \n","4             1  8410000               1  "],"text/html":["\n","  <div id=\"df-0e32a9eb-434b-4505-b141-6617e8ba098a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Make</th>\n","      <th>Year of manufacture</th>\n","      <th>Condition</th>\n","      <th>Mileage</th>\n","      <th>Engine Size</th>\n","      <th>Fuel</th>\n","      <th>Transmission</th>\n","      <th>Price</th>\n","      <th>Price Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>46</td>\n","      <td>2007.0</td>\n","      <td>2</td>\n","      <td>166418.0</td>\n","      <td>2400.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3120000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>138024.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>5834000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>30</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>376807.0</td>\n","      <td>3000.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3640000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>26</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>213362.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3594000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>30</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>106199.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>8410000</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e32a9eb-434b-4505-b141-6617e8ba098a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0e32a9eb-434b-4505-b141-6617e8ba098a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0e32a9eb-434b-4505-b141-6617e8ba098a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c788e429-e2a6-4452-906f-4365189642d7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c788e429-e2a6-4452-906f-4365189642d7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c788e429-e2a6-4452-906f-4365189642d7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 4095,\n  \"fields\": [\n    {\n      \"column\": \"Make\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 0,\n        \"max\": 48,\n        \"num_unique_values\": 49,\n        \"samples\": [\n          38,\n          48,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year of manufacture\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.041435029362435,\n        \"min\": 1992.0,\n        \"max\": 2021.0,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          1992.0,\n          2002.0,\n          2012.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Condition\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mileage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 209104.62104272068,\n        \"min\": 1.0,\n        \"max\": 9976050.0,\n        \"num_unique_values\": 3119,\n        \"samples\": [\n          114531.0,\n          239713.0,\n          228566.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Engine Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7201.91028031499,\n        \"min\": 3.0,\n        \"max\": 371000.0,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          30.0,\n          2400.0,\n          50000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transmission\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4900063,\n        \"min\": 458000,\n        \"max\": 58800000,\n        \"num_unique_values\": 579,\n        \"samples\": [\n          24650000,\n          787500,\n          577500\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price Category\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["## Model Training"],"metadata":{"id":"XQnhxePIELs7"}},{"cell_type":"code","source":["# Split data into features (X) and target (y)\n","X = df.drop(columns=[\"Price\"])\n","y = df[\"Price\"]"],"metadata":{"id":"-p6yNqcfENs7","executionInfo":{"status":"ok","timestamp":1744898888374,"user_tz":-60,"elapsed":13,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"1iR1V2HbFDr8","executionInfo":{"status":"ok","timestamp":1744898905951,"user_tz":-60,"elapsed":62,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"6d5609e3-59e5-49be-c3b5-cd614526ec3d"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Make  Year of manufacture  Condition   Mileage  Engine Size  Fuel  \\\n","0       46               2007.0          2  166418.0       2400.0     3   \n","1       26               2008.0          2  138024.0       2500.0     3   \n","2       30               2008.0          2  376807.0       3000.0     3   \n","3       26               2008.0          2  213362.0       2500.0     3   \n","4       30               2008.0          2  106199.0       2500.0     3   \n","...    ...                  ...        ...       ...          ...   ...   \n","4090    16               2004.0          2  207446.0       3500.0     3   \n","4091    46               2005.0          2  106914.0       1800.0     3   \n","4092    16               2006.0          2  247149.0       1800.0     3   \n","4093    46               2007.0          2  249325.0       2500.0     3   \n","4094    46               2013.0          1  235184.0       2500.0     3   \n","\n","      Transmission  Price Category  \n","0                1               0  \n","1                1               1  \n","2                1               0  \n","3                1               0  \n","4                1               1  \n","...            ...             ...  \n","4090             1               0  \n","4091             1               0  \n","4092             1               0  \n","4093             1               0  \n","4094             1               1  \n","\n","[4095 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-b701f150-e7c1-4a9e-a9cc-654acf4366ba\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Make</th>\n","      <th>Year of manufacture</th>\n","      <th>Condition</th>\n","      <th>Mileage</th>\n","      <th>Engine Size</th>\n","      <th>Fuel</th>\n","      <th>Transmission</th>\n","      <th>Price Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>46</td>\n","      <td>2007.0</td>\n","      <td>2</td>\n","      <td>166418.0</td>\n","      <td>2400.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>138024.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>30</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>376807.0</td>\n","      <td>3000.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>26</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>213362.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>30</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>106199.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4090</th>\n","      <td>16</td>\n","      <td>2004.0</td>\n","      <td>2</td>\n","      <td>207446.0</td>\n","      <td>3500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4091</th>\n","      <td>46</td>\n","      <td>2005.0</td>\n","      <td>2</td>\n","      <td>106914.0</td>\n","      <td>1800.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4092</th>\n","      <td>16</td>\n","      <td>2006.0</td>\n","      <td>2</td>\n","      <td>247149.0</td>\n","      <td>1800.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4093</th>\n","      <td>46</td>\n","      <td>2007.0</td>\n","      <td>2</td>\n","      <td>249325.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4094</th>\n","      <td>46</td>\n","      <td>2013.0</td>\n","      <td>1</td>\n","      <td>235184.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4095 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b701f150-e7c1-4a9e-a9cc-654acf4366ba')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b701f150-e7c1-4a9e-a9cc-654acf4366ba button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b701f150-e7c1-4a9e-a9cc-654acf4366ba');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2ea8aa4a-8e73-4940-9a54-f1494d171a2a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2ea8aa4a-8e73-4940-9a54-f1494d171a2a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2ea8aa4a-8e73-4940-9a54-f1494d171a2a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_902f77e3-ff1b-48af-8ea6-4756d02365ed\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_902f77e3-ff1b-48af-8ea6-4756d02365ed button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X","summary":"{\n  \"name\": \"X\",\n  \"rows\": 4095,\n  \"fields\": [\n    {\n      \"column\": \"Make\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 0,\n        \"max\": 48,\n        \"num_unique_values\": 49,\n        \"samples\": [\n          38,\n          48,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year of manufacture\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.041435029362435,\n        \"min\": 1992.0,\n        \"max\": 2021.0,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          1992.0,\n          2002.0,\n          2012.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Condition\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mileage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 209104.62104272068,\n        \"min\": 1.0,\n        \"max\": 9976050.0,\n        \"num_unique_values\": 3119,\n        \"samples\": [\n          114531.0,\n          239713.0,\n          228566.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Engine Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7201.91028031499,\n        \"min\": 3.0,\n        \"max\": 371000.0,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          30.0,\n          2400.0,\n          50000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transmission\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price Category\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"eZFMBB1LFNpJ","executionInfo":{"status":"ok","timestamp":1744898945035,"user_tz":-60,"elapsed":25,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"3fa18985-21ec-45d0-ac2d-7b6b1c9c7776"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       3120000\n","1       5834000\n","2       3640000\n","3       3594000\n","4       8410000\n","         ...   \n","4090    1125000\n","4091    2643750\n","4092    1462500\n","4093    2475000\n","4094    6300000\n","Name: Price, Length: 4095, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3120000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5834000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3640000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3594000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>8410000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4090</th>\n","      <td>1125000</td>\n","    </tr>\n","    <tr>\n","      <th>4091</th>\n","      <td>2643750</td>\n","    </tr>\n","    <tr>\n","      <th>4092</th>\n","      <td>1462500</td>\n","    </tr>\n","    <tr>\n","      <th>4093</th>\n","      <td>2475000</td>\n","    </tr>\n","    <tr>\n","      <th>4094</th>\n","      <td>6300000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4095 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"],"metadata":{"id":"SMBJQs81FZ7k","executionInfo":{"status":"ok","timestamp":1744898997190,"user_tz":-60,"elapsed":15,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["print(X_train.shape)\n","print(y_train.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TxAc-L_rFjoG","executionInfo":{"status":"ok","timestamp":1744899034566,"user_tz":-60,"elapsed":74,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"b46aad1b-5205-492d-8eb2-e07be4367109"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["(3276, 8)\n","(3276,)\n"]}]},{"cell_type":"code","source":["X_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"8uj562NsFn59","executionInfo":{"status":"ok","timestamp":1744899056874,"user_tz":-60,"elapsed":55,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"f0728ca3-7810-4638-a1ee-924cd64adb30"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Make  Year of manufacture  Condition   Mileage  Engine Size  Fuel  \\\n","2576    33               2009.0          2  224443.0       2500.0     3   \n","1373     7               2009.0          1  274542.0       3600.0     3   \n","221     26               2007.0          2  156579.0       3500.0     3   \n","2866    44               2008.0          2   86291.0       2000.0     3   \n","2750    16               2008.0          2  161352.5       2500.0     3   \n","...    ...                  ...        ...       ...          ...   ...   \n","1130    46               2012.0          1   78080.0       2800.0     3   \n","1294    26               2008.0          2  213189.0       3500.0     3   \n","860     30               2006.0          2   72991.0       3500.0     3   \n","3507    35               2004.0          1   89405.0         14.0     3   \n","3174     1               2009.0          2   99833.0       2000.0     3   \n","\n","      Transmission  Price Category  \n","2576             1               0  \n","1373             1               1  \n","221              1               1  \n","2866             1               0  \n","2750             1               1  \n","...            ...             ...  \n","1130             1               0  \n","1294             1               0  \n","860              1               0  \n","3507             1               0  \n","3174             1               0  \n","\n","[3276 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-4a0d69bc-a6a6-44c7-b634-c1289f4c9a4d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Make</th>\n","      <th>Year of manufacture</th>\n","      <th>Condition</th>\n","      <th>Mileage</th>\n","      <th>Engine Size</th>\n","      <th>Fuel</th>\n","      <th>Transmission</th>\n","      <th>Price Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2576</th>\n","      <td>33</td>\n","      <td>2009.0</td>\n","      <td>2</td>\n","      <td>224443.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1373</th>\n","      <td>7</td>\n","      <td>2009.0</td>\n","      <td>1</td>\n","      <td>274542.0</td>\n","      <td>3600.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>221</th>\n","      <td>26</td>\n","      <td>2007.0</td>\n","      <td>2</td>\n","      <td>156579.0</td>\n","      <td>3500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2866</th>\n","      <td>44</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>86291.0</td>\n","      <td>2000.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2750</th>\n","      <td>16</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>161352.5</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1130</th>\n","      <td>46</td>\n","      <td>2012.0</td>\n","      <td>1</td>\n","      <td>78080.0</td>\n","      <td>2800.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1294</th>\n","      <td>26</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>213189.0</td>\n","      <td>3500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>860</th>\n","      <td>30</td>\n","      <td>2006.0</td>\n","      <td>2</td>\n","      <td>72991.0</td>\n","      <td>3500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3507</th>\n","      <td>35</td>\n","      <td>2004.0</td>\n","      <td>1</td>\n","      <td>89405.0</td>\n","      <td>14.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3174</th>\n","      <td>1</td>\n","      <td>2009.0</td>\n","      <td>2</td>\n","      <td>99833.0</td>\n","      <td>2000.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3276 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4a0d69bc-a6a6-44c7-b634-c1289f4c9a4d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4a0d69bc-a6a6-44c7-b634-c1289f4c9a4d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4a0d69bc-a6a6-44c7-b634-c1289f4c9a4d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7e37345b-1b9c-4458-968f-ccb0603a25b1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7e37345b-1b9c-4458-968f-ccb0603a25b1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7e37345b-1b9c-4458-968f-ccb0603a25b1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_875b020c-1065-49c4-87dc-ef6586180421\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_train')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_875b020c-1065-49c4-87dc-ef6586180421 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_train');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_train","summary":"{\n  \"name\": \"X_train\",\n  \"rows\": 3276,\n  \"fields\": [\n    {\n      \"column\": \"Make\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 0,\n        \"max\": 48,\n        \"num_unique_values\": 46,\n        \"samples\": [\n          14,\n          4,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year of manufacture\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.050346996995956,\n        \"min\": 1992.0,\n        \"max\": 2021.0,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          2021.0,\n          2002.0,\n          2010.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Condition\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mileage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 225467.7609705539,\n        \"min\": 1.0,\n        \"max\": 9976050.0,\n        \"num_unique_values\": 2627,\n        \"samples\": [\n          184611.0,\n          134852.0,\n          276365.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Engine Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7892.893511259576,\n        \"min\": 3.0,\n        \"max\": 371000.0,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          1300.0,\n          4200.0,\n          3000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transmission\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price Category\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["y_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"dXSXYKZgGmqM","executionInfo":{"status":"ok","timestamp":1744899313966,"user_tz":-60,"elapsed":30,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"f4166c33-3885-475b-f8a6-5890d2c80cf8"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2576     1890000\n","1373     6300000\n","221      5200000\n","2866     1365000\n","2750    28800000\n","          ...   \n","1130     4200000\n","1294     3360000\n","860      3360000\n","3507     2288000\n","3174     1995000\n","Name: Price, Length: 3276, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2576</th>\n","      <td>1890000</td>\n","    </tr>\n","    <tr>\n","      <th>1373</th>\n","      <td>6300000</td>\n","    </tr>\n","    <tr>\n","      <th>221</th>\n","      <td>5200000</td>\n","    </tr>\n","    <tr>\n","      <th>2866</th>\n","      <td>1365000</td>\n","    </tr>\n","    <tr>\n","      <th>2750</th>\n","      <td>28800000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1130</th>\n","      <td>4200000</td>\n","    </tr>\n","    <tr>\n","      <th>1294</th>\n","      <td>3360000</td>\n","    </tr>\n","    <tr>\n","      <th>860</th>\n","      <td>3360000</td>\n","    </tr>\n","    <tr>\n","      <th>3507</th>\n","      <td>2288000</td>\n","    </tr>\n","    <tr>\n","      <th>3174</th>\n","      <td>1995000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3276 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["print(X_test.shape)\n","print(y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W7V_c4zWGYua","executionInfo":{"status":"ok","timestamp":1744899251795,"user_tz":-60,"elapsed":25,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"cc5b89a5-0cbd-42e0-b895-04b34dde0bf4"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["(819, 8)\n","(819,)\n"]}]},{"cell_type":"code","source":["linear_model = LinearRegression()\n","linear_model.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"_lbZ0mVBHOqE","executionInfo":{"status":"ok","timestamp":1744899472281,"user_tz":-60,"elapsed":74,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"e19635fb-4b8b-447c-fc2d-2974fa519c68"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>LinearRegression</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["X_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"t4vBMrrMHTLt","executionInfo":{"status":"ok","timestamp":1744899494756,"user_tz":-60,"elapsed":77,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"9332e61f-890d-4e1c-d07e-ba77f3a3fcb6"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Make  Year of manufacture  Condition   Mileage  Engine Size  Fuel  \\\n","1298    13               2010.0          1  463172.0       3000.0     3   \n","2711    16               2008.0          2  306026.0       2500.0     3   \n","3543    16               2012.0          2   58920.0       2400.0     3   \n","3357    47               2010.0          2  184724.0       2500.0     3   \n","2865    46               2003.0          2  224344.0       2400.0     3   \n","...    ...                  ...        ...       ...          ...   ...   \n","862     46               2016.0          2   71610.0       2500.0     3   \n","3760    16               2002.0          2  298834.0       1700.0     3   \n","2628    46               2007.0          2  223493.0       3500.0     2   \n","1425    46               2010.0          1  189486.0       1800.0     3   \n","67      26               2008.0          2  162262.0       4700.0     3   \n","\n","      Transmission  Price Category  \n","1298             1               0  \n","2711             1               0  \n","3543             1               0  \n","3357             1               0  \n","2865             1               0  \n","...            ...             ...  \n","862              1               1  \n","3760             1               0  \n","2628             1               0  \n","1425             1               0  \n","67               1               0  \n","\n","[819 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-1745da1c-3787-47aa-8d43-edfa3d62f266\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Make</th>\n","      <th>Year of manufacture</th>\n","      <th>Condition</th>\n","      <th>Mileage</th>\n","      <th>Engine Size</th>\n","      <th>Fuel</th>\n","      <th>Transmission</th>\n","      <th>Price Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1298</th>\n","      <td>13</td>\n","      <td>2010.0</td>\n","      <td>1</td>\n","      <td>463172.0</td>\n","      <td>3000.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2711</th>\n","      <td>16</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>306026.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3543</th>\n","      <td>16</td>\n","      <td>2012.0</td>\n","      <td>2</td>\n","      <td>58920.0</td>\n","      <td>2400.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3357</th>\n","      <td>47</td>\n","      <td>2010.0</td>\n","      <td>2</td>\n","      <td>184724.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2865</th>\n","      <td>46</td>\n","      <td>2003.0</td>\n","      <td>2</td>\n","      <td>224344.0</td>\n","      <td>2400.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>862</th>\n","      <td>46</td>\n","      <td>2016.0</td>\n","      <td>2</td>\n","      <td>71610.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3760</th>\n","      <td>16</td>\n","      <td>2002.0</td>\n","      <td>2</td>\n","      <td>298834.0</td>\n","      <td>1700.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2628</th>\n","      <td>46</td>\n","      <td>2007.0</td>\n","      <td>2</td>\n","      <td>223493.0</td>\n","      <td>3500.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1425</th>\n","      <td>46</td>\n","      <td>2010.0</td>\n","      <td>1</td>\n","      <td>189486.0</td>\n","      <td>1800.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>26</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>162262.0</td>\n","      <td>4700.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>819 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1745da1c-3787-47aa-8d43-edfa3d62f266')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1745da1c-3787-47aa-8d43-edfa3d62f266 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1745da1c-3787-47aa-8d43-edfa3d62f266');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3a95c70f-5a06-4b48-8ef2-86e80ce52efc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3a95c70f-5a06-4b48-8ef2-86e80ce52efc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3a95c70f-5a06-4b48-8ef2-86e80ce52efc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_16f40093-912c-40d4-8447-6977128e76c9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_test')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_16f40093-912c-40d4-8447-6977128e76c9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_test');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_test","summary":"{\n  \"name\": \"X_test\",\n  \"rows\": 819,\n  \"fields\": [\n    {\n      \"column\": \"Make\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 0,\n        \"max\": 48,\n        \"num_unique_values\": 42,\n        \"samples\": [\n          20,\n          33,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year of manufacture\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.007280572154902,\n        \"min\": 1997.0,\n        \"max\": 2020.0,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          2014.0,\n          2013.0,\n          2010.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Condition\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mileage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 123639.44751947293,\n        \"min\": 62.0,\n        \"max\": 1580052.0,\n        \"num_unique_values\": 777,\n        \"samples\": [\n          140590.0,\n          151892.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Engine Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3183.476316218796,\n        \"min\": 3.0,\n        \"max\": 50000.0,\n        \"num_unique_values\": 54,\n        \"samples\": [\n          6000.0,\n          2800.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transmission\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price Category\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["linear_predictions = linear_model.predict(X_test)\n","linear_predictions"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LID2Lt52Hh8V","executionInfo":{"status":"ok","timestamp":1744899550042,"user_tz":-60,"elapsed":76,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"7e2c17af-6b2f-4c94-b381-c5d807f44bf1"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 3.69764115e+06,  2.49684058e+06,  3.72761326e+06,  3.40644163e+06,\n","        1.50282478e+06,  2.85837141e+06,  1.75705442e+06,  1.00397902e+07,\n","        4.45059161e+06,  1.81978211e+06,  1.18012485e+07,  8.58207551e+06,\n","        2.28033634e+06,  4.21664829e+06,  3.15910400e+06,  3.64439710e+06,\n","        3.09867724e+06,  1.71131097e+06, -4.99322995e+05,  8.72113027e+06,\n","        8.98978609e+06,  2.71413606e+06,  3.32128681e+06,  1.38622399e+06,\n","        1.21810275e+07,  1.77492813e+06,  1.07546704e+07,  2.76438998e+06,\n","        1.04983247e+07,  8.50115244e+05,  8.54281424e+06,  1.79028888e+06,\n","        4.45852909e+06,  1.06797392e+07,  1.03057285e+07,  1.29599115e+06,\n","        1.06952548e+07,  2.54978314e+06,  9.67515943e+06,  1.06947691e+07,\n","        2.75636922e+06,  1.07868766e+07,  2.92402833e+06,  2.78526546e+06,\n","        4.27468318e+06,  1.09912307e+07,  3.14864333e+06,  4.03743159e+06,\n","        3.32954245e+06,  1.05768823e+06,  1.07806272e+07,  3.10747730e+06,\n","        4.37343279e+06,  8.50115244e+05,  9.08375907e+06,  2.58277237e+06,\n","        1.18544947e+07,  2.66173814e+06,  2.74915266e+06,  3.72382270e+06,\n","        2.36196664e+06,  4.97582414e+06,  2.90854377e+06,  8.64267505e+06,\n","        4.86343235e+06,  3.19209858e+06,  2.24963228e+06,  1.58628145e+06,\n","        3.51597308e+06,  1.04847784e+07,  3.23119294e+06,  3.09965863e+06,\n","        2.82339027e+06,  7.80715833e+06,  1.07463470e+07,  2.07343361e+06,\n","        1.88420656e+06,  2.74890301e+06,  3.74258304e+06,  2.50950153e+06,\n","        1.24941860e+06,  3.24075044e+06,  8.60961203e+06,  1.12769731e+07,\n","        2.15923565e+06,  6.09498668e+04,  1.50469673e+06,  3.12132181e+06,\n","        2.61280236e+06,  2.08354752e+06,  3.93069024e+06,  4.13837248e+06,\n","        3.07698726e+06,  1.02440309e+07,  2.89142549e+06,  1.14283848e+07,\n","        8.91799866e+06,  1.52119580e+06,  1.53653714e+06,  1.70145454e+06,\n","        1.80726725e+06,  1.08845102e+07,  1.85702774e+06,  4.01035200e+06,\n","        3.14264420e+06,  9.48117548e+06,  1.35109611e+06,  3.15272661e+06,\n","        4.42222358e+06,  3.42784961e+06,  2.89749099e+06,  5.33545123e+06,\n","        4.27122783e+06,  2.39224273e+06,  9.91966737e+06,  2.73813570e+06,\n","        9.09476911e+06,  2.07286379e+06,  3.44565559e+06,  2.56856175e+06,\n","        9.47561207e+06,  1.10036347e+07,  4.52786134e+06,  4.13837248e+06,\n","        3.78048718e+06,  2.77314243e+06,  4.23910331e+06,  2.59822876e+06,\n","        3.42469442e+06,  9.22159521e+05,  1.09512733e+07,  2.29490981e+06,\n","        3.75516838e+06,  9.08629942e+06,  1.05441745e+07,  2.75559411e+06,\n","        1.36742785e+06,  2.04117826e+06,  3.14166648e+06,  9.21857037e+06,\n","        1.88199985e+06,  4.26037544e+06,  1.02748961e+06,  1.14962177e+07,\n","        9.30364465e+06,  2.63490736e+06,  2.03403507e+05,  1.26256060e+07,\n","        2.79280205e+06,  2.97572662e+06,  1.12150718e+07,  2.62877739e+06,\n","        3.54321324e+06,  2.20390347e+06,  1.18852934e+07,  1.04127685e+07,\n","        9.09411481e+06,  9.49813162e+06,  1.37082310e+06,  8.43541706e+06,\n","        3.54644644e+06,  3.42768346e+06,  1.05241163e+06,  2.90559149e+06,\n","        7.68990875e+05,  2.42335017e+06,  3.16868323e+06,  4.48503067e+06,\n","        3.05307158e+06,  2.56145516e+06,  3.33954492e+06,  2.49965212e+06,\n","        8.91426592e+06,  1.71693257e+06,  9.92590530e+06,  1.68752864e+06,\n","        3.45261723e+05,  2.07487199e+06,  8.71812022e+06,  9.97068657e+06,\n","        1.32363705e+06,  4.09840109e+06,  3.23307897e+06,  8.72684822e+06,\n","        2.35145062e+06,  3.44097788e+06,  1.80105847e+06,  3.67745850e+06,\n","        4.27451967e+06,  3.24949186e+06,  2.86896420e+06,  1.99463099e+06,\n","        2.55719631e+06,  2.50931266e+06,  2.15039586e+06,  9.19714666e+05,\n","        2.54484420e+06,  1.02084406e+07,  2.94791281e+06,  2.33816910e+06,\n","        3.69240024e+06,  1.41726226e+06,  2.21110304e+06,  3.34864042e+06,\n","        2.64033075e+06,  2.34258834e+06,  2.66363381e+06,  2.26696008e+06,\n","        2.27836108e+06,  3.67970618e+06,  9.81341404e+06,  1.75409669e+06,\n","        3.69298886e+06,  1.36755273e+06,  4.66183058e+06, -1.03837106e+06,\n","        8.55450091e+06,  4.17655757e+06,  1.15444581e+07,  2.47656123e+06,\n","        8.88534500e+06,  3.26931732e+06,  2.61910312e+06,  2.58277237e+06,\n","        1.05127119e+07,  3.13943486e+06,  2.16568020e+06,  4.50984928e+06,\n","        3.20153586e+06,  1.06447268e+07,  1.60958680e+06,  4.15903008e+06,\n","        2.41027962e+06,  2.89782430e+06,  2.44657106e+06,  1.54653167e+06,\n","        3.40416331e+06,  2.18512193e+06,  4.31138242e+05,  1.07379478e+07,\n","        1.26147180e+06,  3.41969243e+06,  4.14610863e+06,  4.33529164e+06,\n","        1.59725555e+06,  2.78021710e+06,  4.36744082e+06,  3.80254572e+06,\n","        2.19944502e+06,  1.14512100e+07,  2.73437166e+06,  2.29495799e+06,\n","        9.82630306e+06,  4.06121981e+05,  1.90281273e+06,  2.96904854e+06,\n","        4.48963025e+06,  2.71759650e+06,  2.57507669e+06,  2.36658354e+06,\n","        2.77965073e+06,  3.39380298e+06,  8.68400585e+06,  1.29612727e+06,\n","        2.06987467e+06,  9.65861193e+06, -3.62134274e+05,  1.55995763e+06,\n","        4.04834200e+06,  2.44105961e+06,  9.64839565e+06,  2.20619893e+06,\n","        2.63386920e+06,  2.55873514e+06,  1.24238579e+06,  2.70223290e+06,\n","        1.62956824e+06,  9.80469250e+06,  1.86474192e+06,  2.42392830e+06,\n","        3.09382189e+06,  1.55688290e+06,  3.10434534e+06,  3.57736656e+06,\n","        2.12023713e+06,  2.03861521e+06,  1.34188898e+06,  9.76741350e+06,\n","        2.17789119e+06,  2.92246052e+06,  4.20492455e+06,  1.01032804e+07,\n","        3.18043698e+06,  3.49401502e+06,  3.17998242e+06,  8.66506281e+06,\n","        2.57852481e+06,  1.49118669e+06,  1.06124287e+07,  1.48468721e+05,\n","        3.81553806e+06,  2.73463099e+06,  3.10619158e+06,  1.10731530e+06,\n","        2.40206274e+06,  2.43233814e+06,  2.35528492e+06,  2.91333319e+06,\n","        2.77314243e+06,  8.04260045e+05,  1.91275445e+06,  2.68030456e+06,\n","        1.14430103e+06,  2.55052015e+06,  1.93060463e+06,  2.78121313e+06,\n","        2.41776746e+06,  2.68602462e+06,  9.07477534e+06,  3.09355439e+06,\n","        2.60921164e+06,  9.75332039e+06,  2.74216243e+06,  1.57015584e+06,\n","        1.02527924e+07,  1.11017902e+07,  2.49186156e+06,  2.62364829e+06,\n","        3.64897414e+06,  8.73753592e+05,  1.51501888e+06,  2.33996247e+06,\n","        2.67302938e+06,  3.96412523e+06,  3.66276146e+06,  3.71914156e+05,\n","        2.74239087e+06,  1.15624018e+07,  2.90316241e+06,  2.82105831e+06,\n","        4.73974087e+06,  2.73672413e+06,  2.98032408e+06,  2.68437321e+06,\n","        1.49970834e+06,  8.69576663e+06,  1.19236586e+07,  1.21517432e+07,\n","        1.10703788e+07,  2.94626972e+06,  8.78007044e+06,  3.96412523e+06,\n","        2.38179922e+06,  1.81050509e+06,  8.62901255e+06,  3.70453638e+06,\n","        2.81846911e+06, -1.94398356e+05,  2.92151815e+06,  8.48254903e+06,\n","        4.23881405e+06,  1.10026468e+07,  9.85707823e+06,  1.27230610e+04,\n","        2.24963228e+06,  3.40255305e+06,  1.03877215e+07,  1.00573848e+07,\n","        4.30858979e+06,  3.94062373e+06,  1.84238306e+06,  1.44470274e+06,\n","        3.00064899e+06,  8.90473648e+06,  2.66925778e+06,  2.60159105e+06,\n","        3.98874053e+06,  4.13901644e+06,  3.38370087e+06,  2.24877674e+06,\n","        4.72461902e+06,  2.06454349e+06,  2.64607865e+06,  2.75078107e+06,\n","        2.59366527e+06,  1.06413780e+07,  2.71283924e+06,  8.67695160e+06,\n","        2.80867101e+06,  3.40265918e+06,  2.57226663e+06,  2.39699420e+06,\n","        9.09476911e+06,  1.52102069e+06,  2.59353888e+06,  3.28175150e+06,\n","        2.85507396e+06,  4.59898331e+06, -2.89033752e+04,  1.01668560e+07,\n","        2.81894713e+06,  3.18017419e+06,  6.23194890e+05,  3.28559609e+06,\n","        1.37931999e+06,  9.16611213e+06,  2.85585548e+05,  3.41351620e+06,\n","        8.70808663e+06,  1.00490538e+07,  6.53147467e+05,  2.73605151e+06,\n","        2.41320599e+06,  4.38347212e+06,  1.03300083e+07,  2.97104721e+06,\n","        1.58585049e+06,  3.20484468e+06,  8.48063192e+06,  9.17972840e+05,\n","        1.10353725e+07,  2.47795448e+06,  3.46103074e+06,  8.90249485e+06,\n","        2.87334501e+06,  3.17524300e+06,  2.92028880e+06,  1.86724513e+06,\n","        2.65246043e+06,  4.47421946e+06,  2.98213944e+06,  9.57401352e+06,\n","        2.91359006e+06,  8.63662644e+06,  3.09801840e+06,  2.68478389e+06,\n","        8.70010218e+06,  2.15649127e+06,  1.32230032e+06,  4.04778319e+06,\n","        2.12222328e+06,  2.57512539e+06,  2.89122009e+06,  1.00659936e+07,\n","        2.58201167e+06,  8.90673845e+06,  3.71827246e+06,  1.89353562e+06,\n","        8.66657465e+06,  2.34375240e+06,  3.39356242e+06,  1.09837492e+07,\n","        4.40610563e+06,  2.30396439e+06,  4.47488232e+06,  2.12246604e+06,\n","        2.42402949e+06,  2.17789119e+06,  4.70386327e+06,  3.42048305e+06,\n","        2.59575250e+06,  3.35307869e+06,  1.05270860e+07,  9.91228689e+06,\n","        1.79515087e+06,  2.45192817e+06,  4.53049644e+06,  9.66910729e+06,\n","        9.51436441e+05,  1.89026640e+06,  2.79058748e+06,  8.27962080e+06,\n","        2.69545256e+06,  1.49970834e+06,  3.18393313e+06,  1.78928432e+06,\n","        2.03483338e+06,  9.98460871e+06,  3.38775182e+06,  2.90839675e+06,\n","        3.30375452e+06,  2.33958134e+06,  1.03770042e+07,  2.42789908e+06,\n","        3.05218675e+06,  2.73329872e+06,  2.56349591e+06,  1.99437484e+06,\n","        2.59379835e+06,  7.11523299e+05,  2.67859759e+06,  8.74131429e+06,\n","        2.26280502e+06,  8.67783228e+06,  1.45231248e+06,  3.72761326e+06,\n","        3.33091103e+06,  2.12032176e+06,  1.22879759e+07,  3.21712426e+06,\n","        2.81213751e+06,  9.91249356e+06,  1.85253940e+06,  2.49863134e+06,\n","        2.42011934e+06,  9.25751312e+06,  2.54317761e+06,  2.10203847e+06,\n","        1.26186977e+07,  1.15624018e+07,  2.92868318e+06,  2.72510249e+06,\n","       -1.21028493e+05,  1.96255076e+06,  1.47649921e+06,  1.52881701e+06,\n","        1.03133714e+07,  3.72284765e+06,  1.07438979e+05,  1.45154568e+06,\n","        2.71651868e+06,  1.64989735e+06,  3.73341009e+06,  8.76138709e+06,\n","        3.05904043e+05,  4.24489368e+06,  2.15395943e+06,  2.69926240e+06,\n","        3.66318976e+06,  2.69503416e+06,  1.40022358e+06,  1.07801698e+07,\n","        1.23337990e+06,  1.77461292e+06,  2.80000224e+06,  4.12506691e+06,\n","        4.47400409e+06,  1.04390165e+07,  9.75554329e+06,  3.86481604e+06,\n","        3.98716193e+06,  3.30416648e+06,  1.07609248e+07,  1.20516938e+07,\n","        2.44826921e+06,  2.92734308e+06,  5.39999546e+05,  2.75004409e+06,\n","        3.71688543e+06,  2.86776372e+06,  8.67642369e+06,  7.80110479e+06,\n","        9.18218831e+06,  9.14258729e+06,  3.39356242e+06,  3.02946946e+06,\n","        1.66940773e+06,  1.88830815e+06,  3.99838321e+06,  1.10767682e+07,\n","        1.24967811e+06,  9.26828377e+06,  3.14775250e+06,  2.59379835e+06,\n","        2.51774208e+06,  1.53896763e+06,  8.68592816e+06,  3.97679033e+06,\n","        1.90243163e+06,  3.44191692e+06,  9.81160545e+06,  1.83425722e+06,\n","        1.14365737e+06,  8.56865640e+05,  4.33212785e+05,  3.72908479e+06,\n","        9.46099235e+06,  3.40265918e+06,  2.99674359e+06,  3.40282753e+06,\n","        2.24172761e+06,  3.95597947e+06,  2.12023713e+06,  9.22619012e+06,\n","        2.49342045e+06,  2.53783231e+06,  3.36907917e+06,  2.86895524e+06,\n","        2.50294902e+06,  2.44727747e+06,  2.98088894e+06,  8.63975150e+06,\n","        1.11045209e+07,  4.43631049e+06,  2.88737480e+06,  1.04726229e+06,\n","        1.69191792e+06,  1.04572305e+07,  5.37118066e+06,  1.70240531e+06,\n","        2.66882051e+06,  1.07892806e+07,  2.42815327e+06,  2.60176595e+06,\n","        9.35194545e+05,  2.03141264e+06,  1.85871547e+06,  1.40387482e+06,\n","        1.09954650e+07,  2.82515427e+06,  2.16519110e+06,  2.08119022e+06,\n","        1.21434024e+06,  2.17692343e+06,  4.30886150e+06,  1.06349160e+07,\n","        3.60524597e+06,  2.74648891e+06, -2.15030486e+05,  7.47015271e+06,\n","        8.02706560e+05,  1.55457031e+06,  9.07937163e+06,  2.06579121e+06,\n","        4.84114331e+06,  2.68581578e+06,  1.14365737e+06,  9.90523907e+06,\n","        1.33727504e+06,  1.18893107e+07,  1.03223781e+07,  1.94606273e+06,\n","        2.97104721e+06,  2.76178369e+06,  3.96611704e+06, -1.66195051e+05,\n","        1.24965107e+06,  1.93423838e+06,  2.22243997e+06,  1.17522399e+07,\n","        1.05622173e+07,  1.13764067e+07,  1.07708697e+07,  6.50156401e+05,\n","        1.63575197e+06,  1.55457031e+06,  8.74458695e+06,  2.76785634e+06,\n","        3.01462828e+06,  2.82848639e+06,  1.06395935e+07,  1.58550266e+06,\n","        8.84869314e+06,  2.89482114e+06,  3.06743916e+06,  1.88368229e+06,\n","        8.93499650e+06,  1.58886940e+06,  8.71813016e+06,  1.05494052e+06,\n","        4.30019053e+05,  3.71266610e+06,  1.97151124e+06,  2.89472381e+06,\n","        2.69584817e+06,  1.78037328e+06,  1.05444108e+07,  3.12026646e+06,\n","        3.12819694e+06,  4.24489368e+06,  3.66293039e+06,  1.53920116e+06,\n","        2.65492823e+06,  3.72654864e+06,  2.45315518e+06,  3.00027916e+06,\n","        2.47779557e+06,  2.87020989e+06,  1.06050199e+07,  2.06769102e+06,\n","        1.03191742e+07,  2.74904059e+06,  1.07251445e+07,  3.28666493e+06,\n","        3.50037111e+06,  1.01670073e+07,  2.07578618e+06,  2.85766455e+06,\n","        2.73145072e+06,  8.70150001e+06,  3.39718213e+06,  1.17314412e+07,\n","        1.32881176e+05,  4.27807613e+06,  1.03883417e+07,  2.05764317e+06,\n","        2.28425702e+06,  2.68039655e+06,  1.04712496e+07,  9.11213935e+06,\n","        2.58950449e+06,  8.90987226e+06,  8.92648213e+06,  2.57818694e+06,\n","        8.91426927e+06,  2.05279095e+06,  7.44433599e+05,  2.45039010e+06,\n","        3.58618861e+06,  2.88278008e+06,  1.14931829e+07,  2.22673359e+06,\n","        3.92440813e+06,  2.61468293e+06,  2.52256686e+06,  4.51628496e+06,\n","        4.44024296e+06,  2.27461845e+06,  1.04112772e+07,  3.96384040e+06,\n","        9.46023983e+06,  2.43473751e+06,  1.28422234e+06,  3.29344755e+06,\n","        2.99625848e+06,  1.06870507e+07,  9.80031580e+05,  3.24471583e+06,\n","        1.09980983e+06,  3.06141973e+06,  1.12703429e+07,  1.05727058e+06,\n","        1.51924051e+06,  2.97509659e+06,  8.83397451e+06,  2.13050571e+06,\n","        1.00046700e+07,  1.68425942e+06,  2.68623340e+06,  2.98213944e+06,\n","        4.17574837e+06,  2.46591785e+06,  2.74312728e+06,  2.76453215e+06,\n","        1.00224269e+07,  1.47150632e+06,  1.10220995e+07,  3.95496094e+06,\n","        1.33087980e+06,  2.58809257e+06,  8.55258740e+05,  8.87865027e+06,\n","        3.39006991e+06,  1.60762370e+06,  2.46529485e+06,  3.44185024e+06,\n","        1.07351312e+07,  2.33572412e+06,  3.12317871e+06,  2.61468293e+06,\n","        2.64250763e+06,  2.89861819e+06,  8.02415257e+06,  2.65717851e+06,\n","        8.04001402e+05,  1.71264850e+06,  1.77492813e+06,  4.39060106e+06,\n","        1.89484920e+06,  3.83006881e+06,  2.69818876e+06,  2.64889941e+06,\n","        8.91422640e+06,  2.66477468e+06,  9.65206465e+06,  3.19209858e+06,\n","        3.26383596e+06,  1.05555287e+07,  1.23492494e+07,  1.14439473e+07,\n","        2.77310150e+06,  1.32230032e+06,  2.65088016e+06,  4.23527835e+06,\n","        2.09260568e+06,  8.91417615e+06,  8.90987226e+06,  3.90724809e+06,\n","        3.48273614e+06,  1.54599347e+06,  1.56975651e+06, -4.01174665e+03,\n","        2.77126179e+06,  1.35833835e+06,  9.52540774e+06,  1.09788038e+07,\n","        9.27016094e+06,  8.60787106e+06,  3.12152052e+06,  9.97226457e+06,\n","        3.08337548e+06,  1.02741957e+07,  1.94606273e+06,  1.36438146e+06,\n","        3.15594448e+06,  1.09850252e+07,  2.78025965e+06,  3.13426442e+06,\n","        2.71249203e+06,  2.81352475e+06,  1.59833677e+06,  8.82525286e+06,\n","        3.60717744e+06,  8.64515786e+06,  1.10183062e+07,  8.92043739e+05,\n","        3.45244922e+06,  4.18026168e+06,  2.71561971e+06])"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["len(linear_predictions)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3xFkeKUGHxB6","executionInfo":{"status":"ok","timestamp":1744899618277,"user_tz":-60,"elapsed":26,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"35b60348-edbf-44d7-b22e-3e0f2df877b0"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["819"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"LTC7e-AWH0iF","executionInfo":{"status":"ok","timestamp":1744899663850,"user_tz":-60,"elapsed":39,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"5b617a61-2db7-4145-fd05-9d031baddded"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1298    2835000\n","2711    3057500\n","3543    2512000\n","3357    1050000\n","2865    1275000\n","         ...   \n","862     5775000\n","3760     840000\n","2628    2100000\n","1425    3570000\n","67      4725000\n","Name: Price, Length: 819, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1298</th>\n","      <td>2835000</td>\n","    </tr>\n","    <tr>\n","      <th>2711</th>\n","      <td>3057500</td>\n","    </tr>\n","    <tr>\n","      <th>3543</th>\n","      <td>2512000</td>\n","    </tr>\n","    <tr>\n","      <th>3357</th>\n","      <td>1050000</td>\n","    </tr>\n","    <tr>\n","      <th>2865</th>\n","      <td>1275000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>862</th>\n","      <td>5775000</td>\n","    </tr>\n","    <tr>\n","      <th>3760</th>\n","      <td>840000</td>\n","    </tr>\n","    <tr>\n","      <th>2628</th>\n","      <td>2100000</td>\n","    </tr>\n","    <tr>\n","      <th>1425</th>\n","      <td>3570000</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>4725000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>819 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeRegressor"],"metadata":{"id":"HfzeVIdqPBFJ","executionInfo":{"status":"ok","timestamp":1744901513213,"user_tz":-60,"elapsed":105,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["tree_model = DecisionTreeRegressor()\n","tree_model.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"v4--ljXdPEzM","executionInfo":{"status":"ok","timestamp":1744901528019,"user_tz":-60,"elapsed":67,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"57e24e0b-32d4-4275-dd65-1bf4e8410aff"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeRegressor()"],"text/html":["<style>#sk-container-id-2 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-2 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-2 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-2 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-2 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-2 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-2 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-2 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-2 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-2 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-2 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-2 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-2 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-2 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-2 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-2 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-2 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>DecisionTreeRegressor</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.tree.DecisionTreeRegressor.html\">?<span>Documentation for DecisionTreeRegressor</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeRegressor()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["tree_predictions = tree_model.predict(X_test)\n","tree_predictions"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MtThaxZtPJ4D","executionInfo":{"status":"ok","timestamp":1744901549230,"user_tz":-60,"elapsed":108,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"a4e78c1a-4512-4e7c-806f-c4685d2704b3"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 2835000.,  2474000.,  1995000.,  3120000.,  1768000.,  2625000.,\n","        3432000.,  5250000.,  4680000.,  1050000.,  6864000.,  7290000.,\n","        1575000.,  2205000.,  2625000.,  3990000.,  1995000.,  1680000.,\n","        1260000.,  5554000.,  5775000.,  2625000.,  1260000.,  1560000.,\n","       52000000.,  2184000., 10400000.,  2940000., 15690000.,   832000.,\n","       14010000.,  1160000.,  4200000.,  5460000., 18720000.,  1352000.,\n","        8112000.,  2100000., 10500000.,  8746000.,  1578000., 12480000.,\n","        1560000.,  3395000.,  3120000.,  9880000.,  1995000.,  4200000.,\n","        1050000.,  1456000., 11550000.,  2940000.,  4784000.,   832000.,\n","        6300000.,  2310000., 11250000.,  4714000.,  3100000.,  2415000.,\n","        1890000.,  2500000.,  3068000.,  5040000.,  2205000.,  1785000.,\n","        3095000.,   792500.,  2940000., 10500000.,  3570000.,  3588000.,\n","        3952000.,  6300000.,  7875000.,  2704000.,  1560000.,  1914000.,\n","        3780000.,  2600000.,   945000.,  3952000., 11800000., 15600000.,\n","        1575000.,   892500.,  2028000.,  2835000.,  1690000.,  1575000.,\n","        2677500.,  3885000.,  3150000.,  5400000.,  3016000., 14560000.,\n","       10202000.,  1890000.,   792500.,  4680000.,  1560000., 14560000.,\n","        2835000.,  1575000.,  3560000.,  7350000.,  1560000.,  2100000.,\n","        4680000.,   682500.,  3150000.,  3150000.,  3068000.,  2625000.,\n","       15750000.,  4266000.,  7280000.,  1212750.,  3712500.,  2100000.,\n","       12480000., 22050000.,  4368000.,  3885000.,  4275000.,  2730000.,\n","        3536000.,  1872000.,  4050000.,  1470000.,  6510000.,  1575000.,\n","        4500000., 17930000., 13520000.,  1032500.,  1912500.,  2100000.,\n","        2205000.,  6032000.,  2048400.,  4160000.,  1575000.,  5775000.,\n","        6240000.,  4888000.,   682500., 52000000.,  2625000.,  3570000.,\n","       18900000.,  3570000.,  4095000.,  3255000.,  6300000.,  9450000.,\n","        7904000., 14352000.,  1260000.,  7200000.,  1732500.,   682500.,\n","        1260000.,  2415000.,  1260000.,  2835000.,  2310000.,  3990000.,\n","        3640000.,  2474000.,  3536000.,  4249440.,  8500000.,  2730000.,\n","        6825000.,  1155000.,  1365000.,  2288000., 10090000.,  7280000.,\n","        1575000.,  4200000.,  4688000., 17930000.,  2496000.,  2362500.,\n","        1680000.,  3600000.,  2310000.,   525000.,  2100000.,  2288000.,\n","        2520000.,  3517500.,  2730000.,  1365000.,  2205000.,  9880000.,\n","        1575000.,  1890000.,  1890000.,  1352000.,  1560000.,  3675000.,\n","        4714000.,  2310000.,  3150000.,  1050000.,  4160000.,  3360000.,\n","        9866000.,  1575000.,  3675000.,  1365000.,  4725000.,  1047500.,\n","        5250000.,  3675000.,  5775000.,  1260000.,  7122000.,  2677500.,\n","        1365000.,  2310000.,  7280000.,  3360000.,  2100000.,  4576000.,\n","        4576000., 11550000.,  2912000.,  4740000.,  2496000.,  2415000.,\n","        1680000.,  2704000.,  3600000.,  2100000.,   840000.,  9360000.,\n","        1365000.,  4160000.,  3262500.,  1260000.,  1365000.,  2964000.,\n","        2025000.,  3675000.,  1890000., 10400000.,  3588000.,  1260000.,\n","        7280000.,  1047500.,  1050000.,  3952000.,  3990000.,  4500000.,\n","        2835000.,  2652000.,  4490000.,  3675000.,  5200000.,  1872000.,\n","        1575000.,  5565000.,  1470000.,  1050000.,  3780000.,  1560000.,\n","        7280000.,  4160000.,  3640000.,  1690000.,  1560000.,  1995000.,\n","         945000.,  5565000.,  2288000.,  1785000.,  2600000.,  2812500.,\n","        3885000.,  4200000.,  2712000.,  3432000.,  2184000.,  7280000.,\n","        2730000.,  1365000.,  4162500.,  6300000.,  1995000.,  2940000.,\n","        1575000., 17930000.,  2600000.,  1012500.,  6240000.,  2080000.,\n","        4200000.,  2520000.,  2625000.,  1800000.,  1995000.,  2310000.,\n","        2600000.,  3068000.,  2730000.,  1365000.,  2808000.,  3375000.,\n","        1560000.,  4770000.,  1365000.,  3570000.,  1890000.,  2625000.,\n","        7875000.,  2730000.,  2100000.,  6448000.,  2586000.,  2080000.,\n","        6240000.,  9000000.,  1995000.,  2812500.,  1260000.,  1560000.,\n","        2812500.,  3016000.,  4888000.,  3640000.,  2625000.,  1575000.,\n","        3675000.,  6300000.,  4658000.,  2586000.,  1785000.,  4266000.,\n","        2940000.,  2625000.,  1470000.,  9866000., 26000000., 52000000.,\n","       23920000.,  2730000.,  8970000.,  3640000.,  1768000.,  2600000.,\n","        6394000.,  2475000.,  2625000.,  1365000.,  1785000.,  7280000.,\n","        4160000.,  5720000.,  6552000.,  1050000.,  3095000.,  3120000.,\n","        9360000., 12375000.,  4725000.,  4160000.,  1837500.,  1785000.,\n","        3465000., 15690000.,  2310000.,  2100000.,  3120000.,  1942500.,\n","        4680000.,  2415103.,  4725000.,  2288000.,  3045000.,  2100000.,\n","        2808000.,  6240000.,  3370000.,  5200000.,  2415103.,  3952000.,\n","        3328000.,  1470000.,  7280000.,  1508000.,  2310000.,  3465000.,\n","        3706000.,  4725000.,   630000.,  7280000.,  3465000.,  1560000.,\n","        4200000.,  2625000.,  2496000.,  5775000.,  1144000.,   525000.,\n","       11210000., 10090000.,   840000.,  4266000.,  2392000.,  3990000.,\n","       10500000.,  2690000.,   945000.,  1260000.,  5106000.,  1050000.,\n","        5775000.,  3675000.,  2415000., 10090000.,  2625000.,  1995000.,\n","        2025000.,  1050000.,  1365000.,  2415000.,  2690000.,  5250000.,\n","        1785000.,  6394000.,  3120000.,  2586000.,  7626000.,  4725000.,\n","        2835000.,  1025000.,  3600000.,  1470000.,  3034000.,  8550000.,\n","        1575000.,  8410000.,  2625000.,  1575000., 16810000.,  2700000.,\n","        3120000.,  6760000.,  1155000.,  2100000.,  4680000.,  1050000.,\n","        2835000.,  2730000.,  3360000.,  2700000.,  1785000.,  3255000.,\n","       10400000.,  7140000.,  1470000.,  2625000.,  4515000.,  5720000.,\n","        1456000.,  3640000.,  4490000.,  7875000.,  3937500.,  1470000.,\n","        2912000.,  1785000.,  1560000.,  6412500.,  3885000.,  2100000.,\n","        4200000.,  1890000.,  6090000.,  2625000.,  2467500.,  3930000.,\n","        2625000.,  1664000.,  3328000.,  1680000.,  1575000.,  5610000.,\n","        3640000., 10650000.,  1768000.,  1995000.,  3450000.,  2310000.,\n","       24150000.,  1560000.,  4200000.,  5625000.,  1716000.,  2474000.,\n","        4056000.,  5722000.,  1466000.,  3600000., 45000000.,  6300000.,\n","        1785000.,  2814000.,   682500.,  1260000.,  2496000.,  1872000.,\n","       23920000.,  2520000.,   735000.,   997500.,  2474000.,  1575000.,\n","        3255000.,  7850000.,  1352000.,  3858750.,  3675000.,  2310000.,\n","        1575000.,  4200000.,  1050000.,  9660000.,  1560000.,  1575000.,\n","         906000.,  4200000.,  3990000.,  5720000.,  7875000.,  4200000.,\n","        3465000.,  2625000.,  6615000., 10500000.,  3125000.,  3952000.,\n","        1040000.,  3150000.,  1890000.,  2625000.,  5200000., 11800000.,\n","        5408000., 14560000.,  3120000.,  3640000.,  1575000.,  3640000.,\n","        3150000.,  6825000.,  2200000.,  7280000.,  3570000.,  3328000.,\n","        2520000.,  1820000.,  5645000.,  2625000.,  1575000.,  3262500.,\n","        5720000.,  3360000.,   945000.,  1687500.,  1237500.,  2100000.,\n","        8400000.,  3952000.,  3832500.,  3885000.,  2520000.,  3640000.,\n","        2712000.,  6525000.,  2912000.,  3432000.,  4680000.,  1575000.,\n","        3952000.,  3536000.,  3360000.,  7178000.,  9000000.,  3885000.,\n","        2808000.,   765000.,  4680000., 10500000.,  1680000.,  1130000.,\n","        4266000.,  8610000.,  3675000.,  2730000.,   840000.,  2250000.,\n","        2600000.,  1365000., 15600000.,  2700000.,  2698000.,  1575000.,\n","        1404000.,  2200000.,  3517500.,  6825000.,  3640000.,  3818000.,\n","         936000., 17850000.,  1155000.,  2704000.,  7280000.,  1365000.,\n","        3465000.,  2586000.,   945000.,  8840000.,  1352000., 12600000.,\n","       23920000.,  1680000.,  2690000.,  3818000.,  4056000.,   577500.,\n","         945000.,  1575000.,  1006800., 15750000., 10500000., 10500000.,\n","        8925000.,   735000.,  2730000.,  2704000., 14570000.,  2922000.,\n","        2415000.,  4200000.,  5775000.,  1260000.,  7850000.,  1707500.,\n","        2808000.,  2137500.,  5834000.,  2496000.,  8457500.,  1995000.,\n","         682500.,  4992000.,  1785000.,  3090000.,  2586000.,  1155000.,\n","       12600000.,  2310000.,  3465000.,  3858750.,  4200000.,  2860000.,\n","        1365000.,  3570000.,  1659000.,  3328000.,  3125000.,  2415000.,\n","        7560000.,  1942500.,  5250000.,  2730000.,  8820000.,  3120000.,\n","        3570000.,  6825000.,  1575000.,  3885000.,  4378000., 50970000.,\n","        3570000., 10125000.,  2080000.,  3150000.,  7560000.,  1050000.,\n","        3328000.,  3675000.,  9880000.,  8112000.,  1890000.,  5834000.,\n","       14570000.,  2520000.,  7100000.,  1155000.,   997500.,  2810000.,\n","        2625000.,  2362500.,  6825000.,   840000.,  2887500.,  2808000.,\n","        1006800.,  3150000.,  4368000.,  3360000.,  5250000.,  3675000.,\n","       20170000.,  2730000.,  1456000.,  4410000.,  3034000., 10500000.,\n","        1050000.,  1560000.,  1352000.,  3937500.,  9880000.,  1995000.,\n","        1575000.,  1145000.,  6412500.,  1872000.,  5616000.,   682000.,\n","        2586000.,  2690000.,  3255000.,  2625000.,  2520000.,  1032500.,\n","        9391200.,  1514000.,  9880000.,  3120000.,   892500.,  2704000.,\n","        1248000., 17930000.,  2625000.,  1768000.,  1620000.,  3848000.,\n","        8925000.,  3600000.,  2625000.,  2808000.,  2600000.,  1802000.,\n","       15080000.,  1466000.,  1260000.,  2887500.,  2184000.,  2100000.,\n","        4725000.,  3150000.,  2586000.,  3600000.,  9900000.,  2474000.,\n","        5200000.,  1785000.,  1470000.,  5145000., 27300000., 26000000.,\n","        3560000.,  2835000.,  4500000.,  3675000.,  3255000.,  8500000.,\n","        5834000.,  3600000.,   630000.,  1260000.,  3360000.,   892500.,\n","        2730000.,  1365000.,  6760000.,  9000000.,  7280000.,  5250000.,\n","        2625000., 11025000.,  2100000.,  6750000.,  1680000.,  1260000.,\n","        2704000.,  6825000.,  4154000.,  3120000.,  3818000.,  1680000.,\n","        3150000., 19000000.,  3640000.,  6300000., 10400000.,   945000.,\n","        3465000.,  3675000.,  4200000.])"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["# Define evaluation metrics\n","metrics = {\n","    \"Mean Absolute Error\": mean_absolute_error,\n","    \"Mean Squared Error\": mean_squared_error\n","}\n","\n","results = {}\n","for name, func in metrics.items():\n","    # Calculate scores for each model\n","    linear_score = func(y_test, linear_predictions)\n","    tree_score = func(y_test, tree_predictions)\n","\n","    # Store results in the dictionary\n","    results[name] = {\n","        \"Linear Regression\": linear_score,\n","        \"Decision Tree\": tree_score\n","    }"],"metadata":{"id":"bpqPYyH2PQOb","executionInfo":{"status":"ok","timestamp":1744901575248,"user_tz":-60,"elapsed":48,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["results"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JXfAk9JJPU0k","executionInfo":{"status":"ok","timestamp":1744901593503,"user_tz":-60,"elapsed":58,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"bf372127-6f03-442a-956d-7453f006d1d0"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Mean Absolute Error': {'Linear Regression': 1515165.03236669,\n","  'Decision Tree': 1047734.4236874237},\n"," 'Mean Squared Error': {'Linear Regression': 9721159878874.828,\n","  'Decision Tree': 9817311671485.604}}"]},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","source":["## Classification"],"metadata":{"id":"AwldDReOPaV1"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.metrics import accuracy_score, precision_score"],"metadata":{"id":"0pg9fcDyPdJ1","executionInfo":{"status":"ok","timestamp":1744901627555,"user_tz":-60,"elapsed":36,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"94dyj0uxPhWj","executionInfo":{"status":"ok","timestamp":1744901645283,"user_tz":-60,"elapsed":131,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"e123ef06-7445-46fc-c86c-0f562fad9e62"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Make  Year of manufacture  Condition   Mileage  Engine Size  Fuel  \\\n","0       46               2007.0          2  166418.0       2400.0     3   \n","1       26               2008.0          2  138024.0       2500.0     3   \n","2       30               2008.0          2  376807.0       3000.0     3   \n","3       26               2008.0          2  213362.0       2500.0     3   \n","4       30               2008.0          2  106199.0       2500.0     3   \n","...    ...                  ...        ...       ...          ...   ...   \n","4090    16               2004.0          2  207446.0       3500.0     3   \n","4091    46               2005.0          2  106914.0       1800.0     3   \n","4092    16               2006.0          2  247149.0       1800.0     3   \n","4093    46               2007.0          2  249325.0       2500.0     3   \n","4094    46               2013.0          1  235184.0       2500.0     3   \n","\n","      Transmission    Price  Price Category  \n","0                1  3120000               0  \n","1                1  5834000               1  \n","2                1  3640000               0  \n","3                1  3594000               0  \n","4                1  8410000               1  \n","...            ...      ...             ...  \n","4090             1  1125000               0  \n","4091             1  2643750               0  \n","4092             1  1462500               0  \n","4093             1  2475000               0  \n","4094             1  6300000               1  \n","\n","[4095 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-84f29029-6f5e-4c1c-ae40-b8d5968efe22\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Make</th>\n","      <th>Year of manufacture</th>\n","      <th>Condition</th>\n","      <th>Mileage</th>\n","      <th>Engine Size</th>\n","      <th>Fuel</th>\n","      <th>Transmission</th>\n","      <th>Price</th>\n","      <th>Price Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>46</td>\n","      <td>2007.0</td>\n","      <td>2</td>\n","      <td>166418.0</td>\n","      <td>2400.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3120000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>138024.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>5834000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>30</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>376807.0</td>\n","      <td>3000.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3640000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>26</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>213362.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3594000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>30</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>106199.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>8410000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4090</th>\n","      <td>16</td>\n","      <td>2004.0</td>\n","      <td>2</td>\n","      <td>207446.0</td>\n","      <td>3500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1125000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4091</th>\n","      <td>46</td>\n","      <td>2005.0</td>\n","      <td>2</td>\n","      <td>106914.0</td>\n","      <td>1800.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2643750</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4092</th>\n","      <td>16</td>\n","      <td>2006.0</td>\n","      <td>2</td>\n","      <td>247149.0</td>\n","      <td>1800.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1462500</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4093</th>\n","      <td>46</td>\n","      <td>2007.0</td>\n","      <td>2</td>\n","      <td>249325.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2475000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4094</th>\n","      <td>46</td>\n","      <td>2013.0</td>\n","      <td>1</td>\n","      <td>235184.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>6300000</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4095 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-84f29029-6f5e-4c1c-ae40-b8d5968efe22')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-84f29029-6f5e-4c1c-ae40-b8d5968efe22 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-84f29029-6f5e-4c1c-ae40-b8d5968efe22');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e45389be-282c-4d7c-85e1-41d2e6c81a8e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e45389be-282c-4d7c-85e1-41d2e6c81a8e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e45389be-282c-4d7c-85e1-41d2e6c81a8e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2a7d0a7c-7b51-4463-8e8c-4551a759b64b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2a7d0a7c-7b51-4463-8e8c-4551a759b64b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 4095,\n  \"fields\": [\n    {\n      \"column\": \"Make\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 0,\n        \"max\": 48,\n        \"num_unique_values\": 49,\n        \"samples\": [\n          38,\n          48,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year of manufacture\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.041435029362435,\n        \"min\": 1992.0,\n        \"max\": 2021.0,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          1992.0,\n          2002.0,\n          2012.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Condition\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mileage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 209104.62104272068,\n        \"min\": 1.0,\n        \"max\": 9976050.0,\n        \"num_unique_values\": 3119,\n        \"samples\": [\n          114531.0,\n          239713.0,\n          228566.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Engine Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7201.91028031499,\n        \"min\": 3.0,\n        \"max\": 371000.0,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          30.0,\n          2400.0,\n          50000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transmission\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4900063,\n        \"min\": 458000,\n        \"max\": 58800000,\n        \"num_unique_values\": 579,\n        \"samples\": [\n          24650000,\n          787500,\n          577500\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price Category\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["X = df.drop(columns=[\"Price Category\"])\n","y = df[\"Price Category\"]"],"metadata":{"id":"7_xfKVuAPnb1","executionInfo":{"status":"ok","timestamp":1744901670053,"user_tz":-60,"elapsed":131,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"qkSYzZiiPud6","executionInfo":{"status":"ok","timestamp":1744901699580,"user_tz":-60,"elapsed":171,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"a29cf383-9d1f-41cb-f39f-ebd8cb4257a8"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Make  Year of manufacture  Condition   Mileage  Engine Size  Fuel  \\\n","0       46               2007.0          2  166418.0       2400.0     3   \n","1       26               2008.0          2  138024.0       2500.0     3   \n","2       30               2008.0          2  376807.0       3000.0     3   \n","3       26               2008.0          2  213362.0       2500.0     3   \n","4       30               2008.0          2  106199.0       2500.0     3   \n","...    ...                  ...        ...       ...          ...   ...   \n","4090    16               2004.0          2  207446.0       3500.0     3   \n","4091    46               2005.0          2  106914.0       1800.0     3   \n","4092    16               2006.0          2  247149.0       1800.0     3   \n","4093    46               2007.0          2  249325.0       2500.0     3   \n","4094    46               2013.0          1  235184.0       2500.0     3   \n","\n","      Transmission    Price  \n","0                1  3120000  \n","1                1  5834000  \n","2                1  3640000  \n","3                1  3594000  \n","4                1  8410000  \n","...            ...      ...  \n","4090             1  1125000  \n","4091             1  2643750  \n","4092             1  1462500  \n","4093             1  2475000  \n","4094             1  6300000  \n","\n","[4095 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-c360aae4-f89b-4bc5-bae8-17386724de22\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Make</th>\n","      <th>Year of manufacture</th>\n","      <th>Condition</th>\n","      <th>Mileage</th>\n","      <th>Engine Size</th>\n","      <th>Fuel</th>\n","      <th>Transmission</th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>46</td>\n","      <td>2007.0</td>\n","      <td>2</td>\n","      <td>166418.0</td>\n","      <td>2400.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3120000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>138024.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>5834000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>30</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>376807.0</td>\n","      <td>3000.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3640000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>26</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>213362.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3594000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>30</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>106199.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>8410000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4090</th>\n","      <td>16</td>\n","      <td>2004.0</td>\n","      <td>2</td>\n","      <td>207446.0</td>\n","      <td>3500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1125000</td>\n","    </tr>\n","    <tr>\n","      <th>4091</th>\n","      <td>46</td>\n","      <td>2005.0</td>\n","      <td>2</td>\n","      <td>106914.0</td>\n","      <td>1800.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2643750</td>\n","    </tr>\n","    <tr>\n","      <th>4092</th>\n","      <td>16</td>\n","      <td>2006.0</td>\n","      <td>2</td>\n","      <td>247149.0</td>\n","      <td>1800.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1462500</td>\n","    </tr>\n","    <tr>\n","      <th>4093</th>\n","      <td>46</td>\n","      <td>2007.0</td>\n","      <td>2</td>\n","      <td>249325.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2475000</td>\n","    </tr>\n","    <tr>\n","      <th>4094</th>\n","      <td>46</td>\n","      <td>2013.0</td>\n","      <td>1</td>\n","      <td>235184.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>6300000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4095 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c360aae4-f89b-4bc5-bae8-17386724de22')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c360aae4-f89b-4bc5-bae8-17386724de22 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c360aae4-f89b-4bc5-bae8-17386724de22');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-11448c8b-e6a4-40d4-a098-5291c111d2d2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-11448c8b-e6a4-40d4-a098-5291c111d2d2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-11448c8b-e6a4-40d4-a098-5291c111d2d2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6ac475ff-e523-4343-b9d0-495345e30774\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6ac475ff-e523-4343-b9d0-495345e30774 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X","summary":"{\n  \"name\": \"X\",\n  \"rows\": 4095,\n  \"fields\": [\n    {\n      \"column\": \"Make\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 0,\n        \"max\": 48,\n        \"num_unique_values\": 49,\n        \"samples\": [\n          38,\n          48,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year of manufacture\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.041435029362435,\n        \"min\": 1992.0,\n        \"max\": 2021.0,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          1992.0,\n          2002.0,\n          2012.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Condition\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mileage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 209104.62104272068,\n        \"min\": 1.0,\n        \"max\": 9976050.0,\n        \"num_unique_values\": 3119,\n        \"samples\": [\n          114531.0,\n          239713.0,\n          228566.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Engine Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7201.91028031499,\n        \"min\": 3.0,\n        \"max\": 371000.0,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          30.0,\n          2400.0,\n          50000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transmission\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4900063,\n        \"min\": 458000,\n        \"max\": 58800000,\n        \"num_unique_values\": 579,\n        \"samples\": [\n          24650000,\n          787500,\n          577500\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"muKAKA7VPxM5","executionInfo":{"status":"ok","timestamp":1744901708778,"user_tz":-60,"elapsed":62,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"c199a3be-e196-42b0-80ab-e82457ae31dd"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       0\n","1       1\n","2       0\n","3       0\n","4       1\n","       ..\n","4090    0\n","4091    0\n","4092    0\n","4093    0\n","4094    1\n","Name: Price Category, Length: 4095, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Price Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4090</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4091</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4092</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4093</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4094</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4095 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"],"metadata":{"id":"NmdEq0uuPsze","executionInfo":{"status":"ok","timestamp":1744901691788,"user_tz":-60,"elapsed":39,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["X_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"T-aJunMRPzGb","executionInfo":{"status":"ok","timestamp":1744901720479,"user_tz":-60,"elapsed":64,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"1d1c8846-3385-4b5d-9326-49b9632a6187"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Make  Year of manufacture  Condition   Mileage  Engine Size  Fuel  \\\n","1298    13               2010.0          1  463172.0       3000.0     3   \n","2711    16               2008.0          2  306026.0       2500.0     3   \n","3543    16               2012.0          2   58920.0       2400.0     3   \n","3357    47               2010.0          2  184724.0       2500.0     3   \n","2865    46               2003.0          2  224344.0       2400.0     3   \n","...    ...                  ...        ...       ...          ...   ...   \n","862     46               2016.0          2   71610.0       2500.0     3   \n","3760    16               2002.0          2  298834.0       1700.0     3   \n","2628    46               2007.0          2  223493.0       3500.0     2   \n","1425    46               2010.0          1  189486.0       1800.0     3   \n","67      26               2008.0          2  162262.0       4700.0     3   \n","\n","      Transmission    Price  \n","1298             1  2835000  \n","2711             1  3057500  \n","3543             1  2512000  \n","3357             1  1050000  \n","2865             1  1275000  \n","...            ...      ...  \n","862              1  5775000  \n","3760             1   840000  \n","2628             1  2100000  \n","1425             1  3570000  \n","67               1  4725000  \n","\n","[819 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-d49a0453-9f2e-4157-ae8e-8dbbf582adb0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Make</th>\n","      <th>Year of manufacture</th>\n","      <th>Condition</th>\n","      <th>Mileage</th>\n","      <th>Engine Size</th>\n","      <th>Fuel</th>\n","      <th>Transmission</th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1298</th>\n","      <td>13</td>\n","      <td>2010.0</td>\n","      <td>1</td>\n","      <td>463172.0</td>\n","      <td>3000.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2835000</td>\n","    </tr>\n","    <tr>\n","      <th>2711</th>\n","      <td>16</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>306026.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3057500</td>\n","    </tr>\n","    <tr>\n","      <th>3543</th>\n","      <td>16</td>\n","      <td>2012.0</td>\n","      <td>2</td>\n","      <td>58920.0</td>\n","      <td>2400.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2512000</td>\n","    </tr>\n","    <tr>\n","      <th>3357</th>\n","      <td>47</td>\n","      <td>2010.0</td>\n","      <td>2</td>\n","      <td>184724.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1050000</td>\n","    </tr>\n","    <tr>\n","      <th>2865</th>\n","      <td>46</td>\n","      <td>2003.0</td>\n","      <td>2</td>\n","      <td>224344.0</td>\n","      <td>2400.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1275000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>862</th>\n","      <td>46</td>\n","      <td>2016.0</td>\n","      <td>2</td>\n","      <td>71610.0</td>\n","      <td>2500.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>5775000</td>\n","    </tr>\n","    <tr>\n","      <th>3760</th>\n","      <td>16</td>\n","      <td>2002.0</td>\n","      <td>2</td>\n","      <td>298834.0</td>\n","      <td>1700.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>840000</td>\n","    </tr>\n","    <tr>\n","      <th>2628</th>\n","      <td>46</td>\n","      <td>2007.0</td>\n","      <td>2</td>\n","      <td>223493.0</td>\n","      <td>3500.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2100000</td>\n","    </tr>\n","    <tr>\n","      <th>1425</th>\n","      <td>46</td>\n","      <td>2010.0</td>\n","      <td>1</td>\n","      <td>189486.0</td>\n","      <td>1800.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3570000</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>26</td>\n","      <td>2008.0</td>\n","      <td>2</td>\n","      <td>162262.0</td>\n","      <td>4700.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>4725000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>819 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d49a0453-9f2e-4157-ae8e-8dbbf582adb0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d49a0453-9f2e-4157-ae8e-8dbbf582adb0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d49a0453-9f2e-4157-ae8e-8dbbf582adb0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-71009f54-7fe1-4865-8f80-22b8956d5675\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-71009f54-7fe1-4865-8f80-22b8956d5675')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-71009f54-7fe1-4865-8f80-22b8956d5675 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b7976ee9-27a0-4fe6-b8b4-beda12c3fcb0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_test')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b7976ee9-27a0-4fe6-b8b4-beda12c3fcb0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_test');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_test","summary":"{\n  \"name\": \"X_test\",\n  \"rows\": 819,\n  \"fields\": [\n    {\n      \"column\": \"Make\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 0,\n        \"max\": 48,\n        \"num_unique_values\": 42,\n        \"samples\": [\n          20,\n          33,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year of manufacture\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.007280572154902,\n        \"min\": 1997.0,\n        \"max\": 2020.0,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          2014.0,\n          2013.0,\n          2010.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Condition\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mileage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 123639.44751947293,\n        \"min\": 62.0,\n        \"max\": 1580052.0,\n        \"num_unique_values\": 777,\n        \"samples\": [\n          140590.0,\n          151892.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Engine Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3183.476316218796,\n        \"min\": 3.0,\n        \"max\": 50000.0,\n        \"num_unique_values\": 54,\n        \"samples\": [\n          6000.0,\n          2800.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transmission\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4554727,\n        \"min\": 525000,\n        \"max\": 50970000,\n        \"num_unique_values\": 310,\n        \"samples\": [\n          1145000,\n          6090000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"LL52Vj--P2l-","executionInfo":{"status":"ok","timestamp":1744901733455,"user_tz":-60,"elapsed":107,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"b5ddc508-33ce-41cf-f296-5df2a6737620"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1298    0\n","2711    0\n","3543    0\n","3357    0\n","2865    0\n","       ..\n","862     1\n","3760    0\n","2628    0\n","1425    0\n","67      0\n","Name: Price Category, Length: 819, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Price Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1298</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2711</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3543</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3357</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2865</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>862</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3760</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2628</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1425</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>819 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["logistic_model = LogisticRegression()\n","logistic_model.fit(X_train, y_train)\n","logistic_predictions = logistic_model.predict(X_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UR4rrBkXP8Vp","executionInfo":{"status":"ok","timestamp":1744901758025,"user_tz":-60,"elapsed":287,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"b110d8e9-c35e-47c5-b0aa-fcbad242c0c2"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_logistic.py:465: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]}]},{"cell_type":"code","source":["logistic_predictions"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TQI08L8dP8IN","executionInfo":{"status":"ok","timestamp":1744901809663,"user_tz":-60,"elapsed":60,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"0085041f-2244-45b5-ba8e-4169d7aa4bf9"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,\n","       0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0,\n","       0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n","       0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0,\n","       1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0,\n","       0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0,\n","       1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n","       0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0,\n","       0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0,\n","       0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0,\n","       1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0,\n","       0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1,\n","       0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n","       0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,\n","       1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0,\n","       0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,\n","       0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n","       0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,\n","       0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0,\n","       0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0,\n","       1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0,\n","       1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1,\n","       0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0,\n","       0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0,\n","       0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1,\n","       1, 0, 0, 0, 0])"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"l7O_lmzwQOiF","executionInfo":{"status":"ok","timestamp":1744901833385,"user_tz":-60,"elapsed":68,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"35f50e94-0064-4fd9-cd32-a87730f3e1db"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1298    0\n","2711    0\n","3543    0\n","3357    0\n","2865    0\n","       ..\n","862     1\n","3760    0\n","2628    0\n","1425    0\n","67      0\n","Name: Price Category, Length: 819, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Price Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1298</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2711</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3543</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3357</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2865</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>862</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3760</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2628</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1425</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>819 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["metrics = {\n","    \"Accuracy\": accuracy_score,\n","    \"Precision\": precision_score\n","}\n","\n","results = {}\n","for name, func in metrics.items():\n","    logistic_score = func(y_test, logistic_predictions)\n","    results[name] = {\"Logistic Regression\": logistic_score}"],"metadata":{"id":"h0Wr_jZFQTWN","executionInfo":{"status":"ok","timestamp":1744901850138,"user_tz":-60,"elapsed":60,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["results"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dnEoGNQGQW1R","executionInfo":{"status":"ok","timestamp":1744901867264,"user_tz":-60,"elapsed":47,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"cc015d52-72e9-419f-cdcf-39250135d0ed"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Accuracy': {'Logistic Regression': 0.9987789987789988},\n"," 'Precision': {'Logistic Regression': 0.9949494949494949}}"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["\n","# Decision Tree model\n","tree_model = DecisionTreeClassifier(random_state=42)\n","tree_model.fit(X_train, y_train)\n","tree_predictions = tree_model.predict(X_test)\n","\n","print(\"Model Evaluation Results:\\n\")\n","for name, func in metrics.items():\n","    logistic_score = func(y_test, logistic_predictions)\n","    tree_score = func(y_test, tree_predictions)\n","    results[name] = {\"Logistic Regression\": logistic_score, \"Decision Tree\": tree_score}\n","    print(f\"{name}:\\n  Logistic Regression: {logistic_score:.2f}\\n  Decision Tree: {tree_score:.2f}\\n\")\n","\n","# Print summary of best model per metric\n","print(\"Best Model per Metric:\")\n","for metric, scores in results.items():\n","    best_model = max(scores, key=scores.get)\n","    print(f\"{metric}: {best_model}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KgVp8MZKQcCx","executionInfo":{"status":"ok","timestamp":1744901887581,"user_tz":-60,"elapsed":48,"user":{"displayName":"Atiatunnnasir Oni Bashir","userId":"04924317580726147301"}},"outputId":"ccdd4a3e-6a6e-4b87-d0b7-86f16eeaba4d"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["Model Evaluation Results:\n","\n","Accuracy:\n","  Logistic Regression: 1.00\n","  Decision Tree: 1.00\n","\n","Precision:\n","  Logistic Regression: 0.99\n","  Decision Tree: 1.00\n","\n","Best Model per Metric:\n","Accuracy: Decision Tree\n","Precision: Decision Tree\n"]}]}]}